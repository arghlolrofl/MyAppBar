<controls:MetroWindow x:Class="MyAppBar.MainWindow"
					  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					  xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
					  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
					  xmlns:command="http://www.galasoft.ch/mvvmlight"
					  xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
					  xmlns:model="clr-namespace:MyAppBar.Model"
					  mc:Ignorable="d"
					  Width="250"
					  d:DesignHeight="350"
					  ShowIconOnTitleBar="False"
					  ShowMinButton="False"
					  ShowMaxRestoreButton="False"
					  Title="{Binding TitleBarText}"
					  DataContext="{Binding Main, Source={StaticResource Locator}}">
	<!-- EventToCommand commands -->
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Closed">
			<command:EventToCommand Command="{Binding WindowClosedCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<!-- Custom title bar buttons -->
	<controls:MetroWindow.RightWindowCommands>
		<controls:WindowCommands>
			<Button Content="search"
					Command="{Binding EnableSearchModeCommand}"
					IsEnabled="{Binding IsWindowEnabled} " />
			<Button Content="settings" />
		</controls:WindowCommands>
	</controls:MetroWindow.RightWindowCommands>

	<!-- Resources -->
	<controls:MetroWindow.Resources>
		<Style x:Key="TreeViewItemStyle1"
			   TargetType="{x:Type TreeViewItem}">
			<Setter Property="MinHeight"
					Value="25" />
			<Setter Property="Foreground"
					Value="{DynamicResource BlackBrush}" />
			<Setter Property="Background"
					Value="{DynamicResource Color_024}" />
			<Setter Property="FocusVisualStyle">
				<Setter.Value>
					<Style>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Border>
										<Rectangle Margin="0"
												   Opacity="0"
												   Stroke="Black"
												   StrokeThickness="5"
												   StrokeDashArray="1 2" />
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="SnapsToDevicePixels"
					Value="True" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeViewItem}">
						<StackPanel>
							<Border x:Name="Border"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="#403C6186"
									MinHeight="{TemplateBinding MinHeight}"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
								<Grid VerticalAlignment="Stretch">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="19" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.Margin>
										<Binding RelativeSource="{RelativeSource TemplatedParent}">
											<Binding.Converter>
												<converters:TreeViewMarginConverter Length="12" />
											</Binding.Converter>
										</Binding>
									</Grid.Margin>
									<ToggleButton x:Name="Expander"
												  ClickMode="Press"
												  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
												  Background="{x:Null}"
												  Foreground="{x:Null}">
										<ToggleButton.LayoutTransform>
											<TransformGroup>
												<ScaleTransform />
												<SkewTransform />
												<RotateTransform />
												<TranslateTransform />
											</TransformGroup>
										</ToggleButton.LayoutTransform>
										<ToggleButton.Style>
											<Style TargetType="{x:Type ToggleButton}">
												<Setter Property="Focusable"
														Value="False" />
												<Setter Property="Width"
														Value="16" />
												<Setter Property="Height"
														Value="16" />
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type ToggleButton}">
															<Grid Background="Transparent"
																  Height="16"
																  Width="16">
																<!-- Data="M 4,0 L 8,4 4,8z"  -->
																<Path x:Name="ExpandPath"
																	  Data="M 0,0 L 5,5 L 0,10"
																	  Fill="Transparent"
																	  HorizontalAlignment="Center"
																	  Stroke="{DynamicResource BlackBrush}"
																	  StrokeThickness="2"
																	  VerticalAlignment="Center" />
															</Grid>
															<ControlTemplate.Triggers>
																<Trigger Property="IsChecked"
																		 Value="True">
																	<Setter Property="RenderTransform"
																			TargetName="ExpandPath">
																		<Setter.Value>
																			<RotateTransform Angle="90"
																							 CenterY="7"
																							 CenterX="1" />
																		</Setter.Value>
																	</Setter>
																	<!--Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource BlackBrush}"/ -->
																	<Setter Property="Stroke"
																			TargetName="ExpandPath"
																			Value="{DynamicResource BlackBrush}" />
																</Trigger>
																<Trigger Property="IsEnabled"
																		 Value="False">
																	<Setter Property="Stroke"
																			TargetName="ExpandPath"
																			Value="{DynamicResource GrayBrush5}" />
																</Trigger>
																<MultiTrigger>
																	<MultiTrigger.Conditions>
																		<Condition Property="IsEnabled"
																				   Value="False" />
																		<Condition Property="IsChecked"
																				   Value="True" />
																	</MultiTrigger.Conditions>
																	<Setter Property="Fill"
																			TargetName="ExpandPath"
																			Value="{DynamicResource GrayBrush5}" />
																	<Setter Property="Stroke"
																			TargetName="ExpandPath"
																			Value="{DynamicResource GrayBrush5}" />
																</MultiTrigger>
																<Trigger Property="IsMouseOver"
																		 Value="True">
																	<Setter Property="Stroke"
																			TargetName="ExpandPath"
																			Value="{DynamicResource AccentColorBrush}" />
																	<Setter Property="Fill"
																			TargetName="ExpandPath"
																			Value="{DynamicResource AccentColorBrush}" />
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</ToggleButton.Style>
									</ToggleButton>
									<ContentPresenter x:Name="PART_Header"
													  ContentTemplate="{TemplateBinding HeaderTemplate}"
													  Content="{TemplateBinding Header}"
													  Grid.Column="1"
													  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
													  ContentSource="Header"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													  Margin="5,0,0,0" />
								</Grid>
							</Border>
							<ItemsPresenter x:Name="ItemsHost">
								<ItemsPresenter.LayoutTransform>
									<ScaleTransform ScaleY="1" />
								</ItemsPresenter.LayoutTransform>
							</ItemsPresenter>
						</StackPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded"
									 Value="False">
								<Setter Property="Visibility"
										TargetName="ItemsHost"
										Value="Collapsed" />
							</Trigger>
							<Trigger Property="HasItems"
									 Value="False">
								<Setter Property="Visibility"
										TargetName="Expander"
										Value="Hidden" />
							</Trigger>
							<Trigger Property="IsMouseOver"
									 SourceName="Border"
									 Value="True">
								<!--Setter Property="Background" TargetName="Border" Value="{DynamicResource AccentColorBrush3}"/-->
								<Setter Property="TextElement.Foreground"
										Value="{DynamicResource BlackColorBrush}" />
							</Trigger>
							<Trigger Property="IsSelected"
									 Value="True">
								<Setter Property="Background"
										TargetName="Border"
										Value="{DynamicResource AccentColorBrush}" />
								<Setter Property="Foreground"
										Value="{DynamicResource AccentSelectedColorBrush}" />
							</Trigger>
							<Trigger Property="IsEnabled"
									 Value="False">
								<Setter Property="Foreground"
										Value="{DynamicResource GrayBrush7}" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsEnabled"
											   Value="False" />
									<Condition Property="IsSelected"
											   Value="True" />
								</MultiTrigger.Conditions>
								<Setter Property="Background"
										TargetName="Border"
										Value="{DynamicResource GrayBrush7}" />
								<Setter Property="Foreground"
										Value="{DynamicResource AccentSelectedColorBrush}" />
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected"
											   Value="True" />
									<Condition Property="IsSelectionActive"
											   Value="True" />
									<Condition Property="IsMouseOver"
											   Value="True" />
								</MultiTrigger.Conditions>
								<Setter Property="Background"
										TargetName="Border"
										Value="{DynamicResource AccentColorBrush2}" />
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TreeViewStyle1"
			   TargetType="{x:Type TreeView}">
			<Setter Property="BorderBrush"
					Value="{DynamicResource BlackBrush}" />
			<Setter Property="Background"
					Value="{DynamicResource WhiteBrush}" />
			<Setter Property="BorderThickness"
					Value="0" />
			<Setter Property="SnapsToDevicePixels"
					Value="True" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TreeView}">
						<Border x:Name="Border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}">
							<ScrollViewer>
								<ItemsPresenter />
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled"
									 Value="False">
								<Setter Property="BorderBrush"
										TargetName="Border"
										Value="{DynamicResource GrayBrush9}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemContainerStyle">
				<Setter.Value>
					<Style TargetType="{x:Type TreeViewItem}">
						<EventSetter Event="MouseDoubleClick"
									 Handler="TreeViewItem_OnMouseDoubleClick"></EventSetter>
						<EventSetter Event="MouseUp"
									 Handler="TreeViewItem_OnMouseUp"></EventSetter>
						<Setter Property="MinHeight"
								Value="25" />
						<Setter Property="Foreground"
								Value="{DynamicResource BlackBrush}" />
						<Setter Property="Background"
								Value="{DynamicResource WhiteBrush}" />
						<Setter Property="FocusVisualStyle">
							<Setter.Value>
								<Style>
									<Setter Property="Control.Template">
										<Setter.Value>
											<ControlTemplate>
												<Border>
													<Rectangle Margin="0"
															   Opacity="0"
															   Stroke="Black"
															   StrokeThickness="5"
															   StrokeDashArray="1 2" />
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Setter.Value>
						</Setter>
						<Setter Property="SnapsToDevicePixels"
								Value="True" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type TreeViewItem}">
									<StackPanel>
										<Border x:Name="Border"
												MinHeight="{TemplateBinding MinHeight}"
												Padding="{TemplateBinding Padding}"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												BorderThickness="1,1,1,0"
												BorderBrush="#FF515151"
												Background="#403C6186">
											<Grid VerticalAlignment="Stretch">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="19" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>
												<Grid.Margin>
													<Binding RelativeSource="{RelativeSource TemplatedParent}">
														<Binding.Converter>
															<converters:TreeViewMarginConverter Length="12" />
														</Binding.Converter>
													</Binding>
												</Grid.Margin>
												<ToggleButton x:Name="Expander"
															  ClickMode="Press"
															  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
													<ToggleButton.Style>
														<Style TargetType="{x:Type ToggleButton}">
															<Setter Property="Focusable"
																	Value="False" />
															<Setter Property="Width"
																	Value="16" />
															<Setter Property="Height"
																	Value="16" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type ToggleButton}">
																		<Grid Background="Transparent"
																			  Height="16"
																			  Width="16">
																			<Path x:Name="ExpandPath"
																				  Data="M4,0L8,4 4,8z"
																				  Fill="Transparent"
																				  HorizontalAlignment="Center"
																				  Stroke="{DynamicResource BlackBrush}"
																				  StrokeThickness="1"
																				  VerticalAlignment="Center" />
																		</Grid>
																		<ControlTemplate.Triggers>
																			<Trigger Property="IsChecked"
																					 Value="True">
																				<Setter Property="RenderTransform"
																						TargetName="ExpandPath">
																					<Setter.Value>
																						<RotateTransform Angle="45"
																										 CenterY="4"
																										 CenterX="4" />
																					</Setter.Value>
																				</Setter>
																				<Setter Property="Fill"
																						TargetName="ExpandPath"
																						Value="{DynamicResource BlackBrush}" />
																				<Setter Property="Stroke"
																						TargetName="ExpandPath"
																						Value="{DynamicResource BlackBrush}" />
																			</Trigger>
																			<Trigger Property="IsEnabled"
																					 Value="False">
																				<Setter Property="Stroke"
																						TargetName="ExpandPath"
																						Value="{DynamicResource GrayBrush5}" />
																			</Trigger>
																			<MultiTrigger>
																				<MultiTrigger.Conditions>
																					<Condition Property="IsEnabled"
																							   Value="False" />
																					<Condition Property="IsChecked"
																							   Value="True" />
																				</MultiTrigger.Conditions>
																				<Setter Property="Fill"
																						TargetName="ExpandPath"
																						Value="{DynamicResource GrayBrush5}" />
																				<Setter Property="Stroke"
																						TargetName="ExpandPath"
																						Value="{DynamicResource GrayBrush5}" />
																			</MultiTrigger>
																			<Trigger Property="IsMouseOver"
																					 Value="True">
																				<Setter Property="Stroke"
																						TargetName="ExpandPath"
																						Value="{DynamicResource AccentColorBrush}" />
																				<Setter Property="Fill"
																						TargetName="ExpandPath"
																						Value="{DynamicResource AccentColorBrush}" />
																			</Trigger>
																		</ControlTemplate.Triggers>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</ToggleButton.Style>
												</ToggleButton>
												<ContentPresenter x:Name="PART_Header"
																  ContentTemplate="{TemplateBinding HeaderTemplate}"
																  Content="{TemplateBinding Header}"
																  Grid.Column="1"
																  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
																  ContentSource="Header"
																  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
																  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
											</Grid>
										</Border>
										<ItemsPresenter x:Name="ItemsHost">
											<ItemsPresenter.LayoutTransform>
												<ScaleTransform ScaleY="1" />
											</ItemsPresenter.LayoutTransform>
										</ItemsPresenter>
									</StackPanel>
									<ControlTemplate.Triggers>
										<Trigger Property="IsExpanded"
												 Value="False">
											<Setter Property="Visibility"
													TargetName="ItemsHost"
													Value="Collapsed" />
										</Trigger>
										<Trigger Property="HasItems"
												 Value="False">
											<Setter Property="Visibility"
													TargetName="Expander"
													Value="Hidden" />
										</Trigger>
										<Trigger Property="IsMouseOver"
												 SourceName="Border"
												 Value="True">
											<Setter Property="Background"
													TargetName="Border"
													Value="{DynamicResource AccentColorBrush3}" />
											<Setter Property="TextElement.Foreground"
													Value="{DynamicResource BlackColorBrush}" />
										</Trigger>
										<Trigger Property="IsSelected"
												 Value="True">
											<Setter Property="Background"
													TargetName="Border"
													Value="{DynamicResource AccentColorBrush}" />
											<Setter Property="Foreground"
													Value="{DynamicResource AccentSelectedColorBrush}" />
										</Trigger>
										<Trigger Property="IsEnabled"
												 Value="False">
											<Setter Property="Foreground"
													Value="{DynamicResource GrayBrush7}" />
										</Trigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsEnabled"
														   Value="False" />
												<Condition Property="IsSelected"
														   Value="True" />
											</MultiTrigger.Conditions>
											<Setter Property="Background"
													TargetName="Border"
													Value="{DynamicResource GrayBrush7}" />
											<Setter Property="Foreground"
													Value="{DynamicResource AccentSelectedColorBrush}" />
										</MultiTrigger>
										<MultiTrigger>
											<MultiTrigger.Conditions>
												<Condition Property="IsSelected"
														   Value="True" />
												<Condition Property="IsSelectionActive"
														   Value="True" />
											</MultiTrigger.Conditions>
											<Setter Property="Background"
													TargetName="Border"
													Value="{DynamicResource AccentColorBrush2}" />
										</MultiTrigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
		</Style>
	</controls:MetroWindow.Resources>

	<StackPanel>
		<DockPanel Dock="Right"
				   Height="35">
			<Button Content="Categories"
					Command="{Binding OpenCategoryDialogCommand}"
					IsEnabled="{Binding IsWindowEnabled}" />
			<Button Content="Tags"
					Command="{Binding OpenTagDialogCommand}"
					IsEnabled="{Binding IsWindowEnabled}" />
			<Button Content="Links"
					Command="{Binding OpenLinkDialogCommand}"
					IsEnabled="{Binding IsWindowEnabled}" />
			<!-- <Button Content="Notes" Command="{Binding OpenNoteDialogCommand}" /> -->
		</DockPanel>
		<Grid Height="30"
			  Visibility="{Binding SearchBoxVisibility}">
			<TextBox Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}" />
			
		</Grid>
		<TreeView Style="{DynamicResource TreeViewStyle1}"
				  ItemsSource="{Binding Categories}">
			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate DataType="{x:Type model:Category}"
										  ItemsSource="{Binding Links}">
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="{Binding Name}"
								   ToolTip="{Binding Description}"></TextBlock>
					</StackPanel>
					<HierarchicalDataTemplate.ItemTemplate>
						<DataTemplate DataType="{x:Type model:Link}">
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{Binding Name}"
										   ToolTip="{Binding Description}"></TextBlock>
							</StackPanel>
						</DataTemplate>
					</HierarchicalDataTemplate.ItemTemplate>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>
		</TreeView>
	</StackPanel>
</controls:MetroWindow>
